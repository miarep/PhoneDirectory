{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/department.service.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","departmentService","loadDepartments","get","subscribe","data","departments","selector","templateUrl","providers","AppModule","imports","declarations","bootstrap","DepartmentService","http","url","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { DepartmentService } from './department.service';\r\nimport { Department } from './department';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    providers: [DepartmentService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    departments: Department[];                // массив товаров\r\n\r\n    constructor(private departmentService: DepartmentService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadDepartments();    // загрузка данных при старте компонента  \r\n    }\r\n    // получаем данные через сервис\r\n    loadDepartments() {\r\n        this.departmentService.get()\r\n            .subscribe((data: Department[]) => this.departments = data);\r\n    }\r\n}","<h1>Список моделей</h1>\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Модель</td>\r\n            <td>Производитель</td>\r\n            <td>ИД</td>\r\n            <td></td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let d of departments\">\r\n            \r\n                <td>{{d.fullName}}</td>\r\n                <td>{{d.shortName}}</td>\r\n                <td>{{d.id}}</td>\r\n                <td>\r\n                    <span *ngFor=\"let e of d.employees\">\r\n                        {{e.fio}} - {{e.position.name}}; \r\n                    </span>\r\n                </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { TreeViewModule } from '@progress/kendo-angular-treeview';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule, TreeViewModule, BrowserAnimationsModule],\r\n    declarations: [AppComponent],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Department } from './department';\r\n\r\n@Injectable()\r\nexport class DepartmentService {\r\n\r\n    private url = \"/api/departments\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    get() {\r\n        return this.http.get(this.url);\r\n    }\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}